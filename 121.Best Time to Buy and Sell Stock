class Solution {
public:
    int maxProfit(vector<int>& prices) {
        // int n=prices.size();
        // int profit=0;

        // if(n<=1)
        // {
        //     return 0;
        // }
        // int minimum=prices[0];
        // for(int i=0;i<n;i++)
        // {
        //     profit=max(profit,prices[i]-minimum);
        //     minimum=min(minimum,prices[i]);
        // }
        // return profit;


    //     int maxProfit = 0;
    //     int minPrice = INT_MAX;

    //     for (int i = 0; i < prices.size(); ++i) {
    //     minPrice = min(minPrice, prices[i]);
    //     maxProfit =max(maxProfit, prices[i] - minPrice);
    // }

    //     return maxProfit;


       int maxProfit = 0;
       int minPrice = INT_MAX;
       int n=prices.size();

        for (int i = 0; i < n; i++) {
        minPrice = min(minPrice, prices[i]);
        maxProfit = max(maxProfit, prices[i] - minPrice);
    }

         return maxProfit;

    }
};
